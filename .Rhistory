####################
ggsave("results_of_analysis/flh.png",
plot = last_plot(),
dpi = 900,
width = 7,
height = 4)
#########################################################
#plot full load hours over commissioning date with trend#
#########################################################
pflh <- ggplot() +
geom_point(data = selection_2015_without_outliers, aes(x=inbetriebnahme, y=flh), size = 0.4, colour = "#fd00e2") +
geom_point(data = selection_2016_without_outliers, aes(x=inbetriebnahme, y=flh), size = 0.4, colour = "#fde600") +
geom_point(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=flh), size = 0.4, colour = "#03a1fc") +
geom_point(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=flh), size = 0.4, colour = "#fc5a03") +
geom_point(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=flh), size = 0.4, colour = "#94fc03") +
geom_smooth(data = selection_2015_without_outliers, aes(x=inbetriebnahme, y=flh, colour = "2015"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2016_without_outliers, aes(x=inbetriebnahme, y=flh, colour = "2016"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=flh, colour = "2017"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=flh, colour = "2018"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=flh, colour = "2019"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
theme_light() +
scale_x_date(limits = as.Date(c("1990-01-01","2030-12-31"))) +
ylim(0, 4000) +
xlab("Comissioning Date") +
ylab("Full load hours [h/a]") +
theme( axis.text=element_text(size=11),
axis.title=element_text(size=12),
plot.title = element_text(size=14),
legend.position = c(0.85, 0.9),
legend.direction = "horizontal") +
geom_hline(yintercept = 2200, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("1997-01-01"),
y=6500,label="mean of ~ 7,400 MWh/a in 2021 with linear trends", size = 2.5) +
geom_hline(yintercept = 2700, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("2000-01-01"),
y=11000,label="mean of ~ 10,000 MWh/a in 2030 with linear trends", size = 2.5) +
geom_hline(yintercept = 15000, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("2003-01-01"),
y=14200, label="> 15,000 MWh/a in 2030 with polynomial models", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=800,label= "All R²  ~ 46 - 51 %", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=400,label="p-values all << 0.001", size = 2.5) +
scale_colour_manual(name = "Year", values=c("#fd00e2", "#fde600", "#03a1fc", "#fc5a03", "#94fc03"))
############
#print plot#
############
pflh +  theme(legend.position = c(0.35,0.93))
#########################################################
#plot full load hours over commissioning date with trend#
#########################################################
pflh <- ggplot() +
geom_point(data = selection_2015_without_outliers, aes(x=inbetriebnahme, y=flh), size = 0.4, colour = "#fd00e2") +
geom_point(data = selection_2016_without_outliers, aes(x=inbetriebnahme, y=flh), size = 0.4, colour = "#fde600") +
geom_point(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=flh), size = 0.4, colour = "#03a1fc") +
geom_point(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=flh), size = 0.4, colour = "#fc5a03") +
geom_point(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=flh), size = 0.4, colour = "#94fc03") +
geom_smooth(data = selection_2015_without_outliers, aes(x=inbetriebnahme, y=flh, colour = "2015"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2016_without_outliers, aes(x=inbetriebnahme, y=flh, colour = "2016"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=flh, colour = "2017"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=flh, colour = "2018"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=flh, colour = "2019"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
theme_light() +
scale_x_date(limits = as.Date(c("1990-01-01","2030-12-31"))) +
ylim(0, 4000) +
xlab("Comissioning Date") +
ylab("Full load hours [h/a]") +
theme( axis.text=element_text(size=11),
axis.title=element_text(size=12),
plot.title = element_text(size=14),
legend.position = c(0.85, 0.9),
legend.direction = "horizontal") +
geom_hline(yintercept = 2300, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("1997-01-01"),
y=6500,label="mean of ~ 7,400 MWh/a in 2021 with linear trends", size = 2.5) +
geom_hline(yintercept = 2800, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("2000-01-01"),
y=11000,label="mean of ~ 10,000 MWh/a in 2030 with linear trends", size = 2.5) +
geom_hline(yintercept = 15000, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("2003-01-01"),
y=14200, label="> 15,000 MWh/a in 2030 with polynomial models", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=800,label= "All R²  ~ 46 - 51 %", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=400,label="p-values all << 0.001", size = 2.5) +
scale_colour_manual(name = "Year", values=c("#fd00e2", "#fde600", "#03a1fc", "#fc5a03", "#94fc03"))
############
#print plot#
############
pflh +  theme(legend.position = c(0.35,0.93))
#########################################################
#plot full load hours over commissioning date with trend#
#########################################################
pflh <- ggplot() +
geom_point(data = selection_2015_without_outliers, aes(x=inbetriebnahme, y=flh), size = 0.4, colour = "#fd00e2") +
geom_point(data = selection_2016_without_outliers, aes(x=inbetriebnahme, y=flh), size = 0.4, colour = "#fde600") +
geom_point(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=flh), size = 0.4, colour = "#03a1fc") +
geom_point(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=flh), size = 0.4, colour = "#fc5a03") +
geom_point(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=flh), size = 0.4, colour = "#94fc03") +
geom_smooth(data = selection_2015_without_outliers, aes(x=inbetriebnahme, y=flh, colour = "2015"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2016_without_outliers, aes(x=inbetriebnahme, y=flh, colour = "2016"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=flh, colour = "2017"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=flh, colour = "2018"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=flh, colour = "2019"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
theme_light() +
scale_x_date(limits = as.Date(c("1990-01-01","2030-12-31"))) +
ylim(0, 4000) +
xlab("Comissioning Date") +
ylab("Full load hours [h/a]") +
theme( axis.text=element_text(size=11),
axis.title=element_text(size=12),
plot.title = element_text(size=14),
legend.position = c(0.85, 0.9),
legend.direction = "horizontal") +
geom_hline(yintercept = 2300, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("1997-01-01"),
y=1900,label="mean of ~ 2,300 h/a in 2021 with linear trends", size = 2.5) +
geom_hline(yintercept = 2800, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("2000-01-01"),
y=3000,label="mean of ~ 2,800 h/a in 2030 with linear trends", size = 2.5) +
geom_hline(yintercept = 15000, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("2003-01-01"),
y=14200, label="> 15,000 MWh/a in 2030 with polynomial models", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=800,label= "All R²  ~ 46 - 51 %", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=400,label="p-values all << 0.001", size = 2.5) +
scale_colour_manual(name = "Year", values=c("#fd00e2", "#fde600", "#03a1fc", "#fc5a03", "#94fc03"))
############
#print plot#
############
pflh +  theme(legend.position = c(0.35,0.93))
#########################################################
#plot full load hours over commissioning date with trend#
#########################################################
pflh <- ggplot() +
geom_point(data = selection_2015_without_outliers, aes(x=inbetriebnahme, y=flh), size = 0.4, colour = "#fd00e2") +
geom_point(data = selection_2016_without_outliers, aes(x=inbetriebnahme, y=flh), size = 0.4, colour = "#fde600") +
geom_point(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=flh), size = 0.4, colour = "#03a1fc") +
geom_point(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=flh), size = 0.4, colour = "#fc5a03") +
geom_point(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=flh), size = 0.4, colour = "#94fc03") +
geom_smooth(data = selection_2015_without_outliers, aes(x=inbetriebnahme, y=flh, colour = "2015"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2016_without_outliers, aes(x=inbetriebnahme, y=flh, colour = "2016"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=flh, colour = "2017"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=flh, colour = "2018"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=flh, colour = "2019"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
theme_light() +
scale_x_date(limits = as.Date(c("1990-01-01","2030-12-31"))) +
ylim(0, 4000) +
xlab("Comissioning Date") +
ylab("Full load hours [h/a]") +
theme( axis.text=element_text(size=11),
axis.title=element_text(size=12),
plot.title = element_text(size=14),
legend.position = c(0.85, 0.9),
legend.direction = "horizontal") +
geom_hline(yintercept = 2300, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("1997-01-01"),
y=2100,label="mean of ~ 2,300 h/a in 2021 with linear trends", size = 2.5) +
geom_hline(yintercept = 2800, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("2000-01-01"),
y=2900,label="mean of ~ 2,800 h/a in 2030 with linear trends", size = 2.5) +
geom_hline(yintercept = 15000, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("2003-01-01"),
y=14200, label="> 15,000 MWh/a in 2030 with polynomial models", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=800,label= "All R²  ~ 46 - 51 %", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=400,label="p-values all << 0.001", size = 2.5) +
scale_colour_manual(name = "Year", values=c("#fd00e2", "#fde600", "#03a1fc", "#fc5a03", "#94fc03"))
############
#print plot#
############
pflh +  theme(legend.position = c(0.35,0.93))
#########################################################
#plot full load hours over commissioning date with trend#
#########################################################
pflh <- ggplot() +
geom_point(data = selection_2015_without_outliers, aes(x=inbetriebnahme, y=flh), size = 0.4, colour = "#fd00e2") +
geom_point(data = selection_2016_without_outliers, aes(x=inbetriebnahme, y=flh), size = 0.4, colour = "#fde600") +
geom_point(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=flh), size = 0.4, colour = "#03a1fc") +
geom_point(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=flh), size = 0.4, colour = "#fc5a03") +
geom_point(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=flh), size = 0.4, colour = "#94fc03") +
geom_smooth(data = selection_2015_without_outliers, aes(x=inbetriebnahme, y=flh, colour = "2015"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2016_without_outliers, aes(x=inbetriebnahme, y=flh, colour = "2016"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=flh, colour = "2017"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=flh, colour = "2018"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=flh, colour = "2019"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
theme_light() +
scale_x_date(limits = as.Date(c("1990-01-01","2030-12-31"))) +
ylim(0, 4000) +
xlab("Comissioning Date") +
ylab("Full load hours [h/a]") +
theme( axis.text=element_text(size=11),
axis.title=element_text(size=12),
plot.title = element_text(size=14),
legend.position = c(0.85, 0.9),
legend.direction = "horizontal") +
geom_hline(yintercept = 2300, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("1997-01-01"),
y=2200,label="mean of ~ 2,300 h/a in 2021 with linear trends", size = 2.5) +
geom_hline(yintercept = 2800, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("2000-01-01"),
y=2900,label="mean of ~ 2,800 h/a in 2030 with linear trends", size = 2.5) +
geom_hline(yintercept = 15000, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("2003-01-01"),
y=14200, label="> 15,000 MWh/a in 2030 with polynomial models", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=800,label= "All R²  ~ 46 - 51 %", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=400,label="p-values all << 0.001", size = 2.5) +
scale_colour_manual(name = "Year", values=c("#fd00e2", "#fde600", "#03a1fc", "#fc5a03", "#94fc03"))
############
#print plot#
############
pflh +  theme(legend.position = c(0.35,0.93))
####################
#save plot as image#
####################
ggsave("results_of_analysis/flh.png",
plot = last_plot(),
dpi = 900,
width = 7,
height = 4)
#########################################################
#plot full load hours over commissioning date with trend#
#########################################################
pflh <- ggplot() +
geom_point(data = selection_2015_without_outliers, aes(x=inbetriebnahme, y=flh), size = 0.4, colour = "#fd00e2") +
geom_point(data = selection_2016_without_outliers, aes(x=inbetriebnahme, y=flh), size = 0.4, colour = "#fde600") +
geom_point(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=flh), size = 0.4, colour = "#03a1fc") +
geom_point(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=flh), size = 0.4, colour = "#fc5a03") +
geom_point(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=flh), size = 0.4, colour = "#94fc03") +
geom_smooth(data = selection_2015_without_outliers, aes(x=inbetriebnahme, y=flh, colour = "2015"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2016_without_outliers, aes(x=inbetriebnahme, y=flh, colour = "2016"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=flh, colour = "2017"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=flh, colour = "2018"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=flh, colour = "2019"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
theme_light() +
scale_x_date(limits = as.Date(c("1990-01-01","2030-12-31"))) +
ylim(0, 4000) +
xlab("Commissioning Date") +
ylab("Full load hours [h/a]") +
theme( axis.text=element_text(size=11),
axis.title=element_text(size=12),
plot.title = element_text(size=14),
legend.position = c(0.85, 0.9),
legend.direction = "horizontal") +
geom_hline(yintercept = 2300, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("1997-01-01"),
y=2200,label="mean of ~ 2,300 h/a in 2021 with linear trends", size = 2.5) +
geom_hline(yintercept = 2800, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("2000-01-01"),
y=2900,label="mean of ~ 2,800 h/a in 2030 with linear trends", size = 2.5) +
geom_hline(yintercept = 15000, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("2003-01-01"),
y=14200, label="> 15,000 MWh/a in 2030 with polynomial models", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=800,label= "All R²  ~ 46 - 51 %", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=400,label="p-values all << 0.001", size = 2.5) +
scale_colour_manual(name = "Year", values=c("#fd00e2", "#fde600", "#03a1fc", "#fc5a03", "#94fc03"))
############
#print plot#
############
pflh +  theme(legend.position = c(0.35,0.93))
####################
#save plot as image#
####################
ggsave("results_of_analysis/flh.png",
plot = last_plot(),
dpi = 900,
width = 7,
height = 4)
###########################################################################
#Plot rated capacity over commissioning date with linear trend 2017 - 2019#
###########################################################################
prated_capacity_over_commission <- ggplot() +
geom_point(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=leistung), size = 0.4, colour = "#94fc03") +
geom_smooth(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=leistung, colour = "2019"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
theme_light() +
scale_x_date(limits = as.Date(c("1990-01-01","2030-12-31"))) +
ylim(-1000, 6000) +
xlab("Commissioning Date") +
ylab("Rated capacity [kW]") +
theme( axis.text=element_text(size=11),
axis.title=element_text(size=12),
plot.title = element_text(size=14),
legend.position = c(0.85, 0.9),
legend.direction = "horizontal") +
geom_hline(yintercept = 3500, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("1997-01-01"),
y=3300,label="mean of ~ 3,500 kW in 2021", size = 2.5) +
geom_hline(yintercept = 4500, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("1997-01-01"),
y=4700,label="Predicted mean of ~ 4,500 kW in 2030", size = 2.5) +
annotate(geom="text",x=as.Date("2025-01-01"),
y=0,label= "R² = ~ 70 %") +
scale_colour_manual(name = "Year", values="#94fc03")
############
#print plot#
############
prated_capacity_over_commission +  theme(legend.position = c(0.25,0.9))
####################
#save plot as image#
####################
ggsave("results_of_analysis/rated_capacity_over_commissioning.png",
plot = last_plot(),
dpi = 900,
width = 7,
height = 4)
###################################################################
#Plot the values with linear and polynomial trends for 2017 - 2019#
###################################################################
pelectricity_yield_2019_poly <- ggplot() +
geom_point(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=menge_mwh), size = 0.4, colour = "#03a1fc") +
geom_point(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=menge_mwh), size = 0.4, colour = "#fc5a03") +
geom_point(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=menge_mwh), size = 0.4, colour = "#94fc03") +
geom_smooth(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2017"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2018"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2019"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2017"), method= "lm", formula = y ~ poly(x, 3), fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2018"), method= "lm", formula = y ~ poly(x, 3), fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2019"), method= "lm", formula = y ~ poly(x, 3), fullrange = TRUE, size = 0.5)  +
theme_light() +
scale_x_date(limits = as.Date(c("1990-01-01","2030-12-31"))) +
ylim(-1000, 20000) +
xlab("Commissioning Date") +
ylab("Electricity yield per WT and year [MWh]") +
theme( axis.text=element_text(size=11),
axis.title=element_text(size=12),
plot.title = element_text(size=14),
legend.position = c(0.85, 0.9),
legend.direction = "horizontal") +
geom_hline(yintercept = 7400, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("1997-01-01"),
y=6500,label="mean of ~ 7,400 MWh/a in 2021 with linear trends", size = 2.5) +
geom_hline(yintercept = 10000, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("2000-01-01"),
y=11000,label="mean of ~ 10,000 MWh/a in 2030 with linear trends", size = 2.5) +
geom_hline(yintercept = 15000, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("2003-01-01"),
y=14200, label="> 15,000 MWh/a in 2030 with polynomial models", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=2000,label= "All adj. R² (3rd poly) ~ 72 %", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=3500,label= "All R² (linear) ~ 68 - 70 %", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=400,label="p-values all << 0.001", size = 2.5) +
scale_colour_manual(name = "Year", values=c("#03a1fc", "#fc5a03", "#94fc03"))
############
#print plot#
############
pelectricity_yield_2019_poly +  theme(legend.position = c(0.25,0.9))
####################
#save plot as image#
####################
ggsave("results_of_analysis/electricity_yield_2017-2019_rlp_over_comissioning_date2.png",
plot = last_plot(),
dpi = 900,
width = 7,
height = 4)
2300/8760
2300*3.5
Sys.setenv(LANG = "en")
pacman::p_load(rio, data.table, tidyverse, tidyr, purrr, magrittr, compare,
ggplot2, DiagrammeR)
Sys.setenv(LANG = "en")
#packages
pacman::p_load(rio, data.table, tidyverse, tidyr, purrr, magrittr)
#import data
MaStR <- read.csv("WTs_RLP.csv", sep = ";")
#choose variables
MaStR <- MaStR[,c(1, 5, 7, 16, 17, 18, 21, 22, 23, 24, 43)]
MaStR <- MaStR[,c(2:6,8,9,11)]
setwd("C:/Users/Dell/Desktop/MasterThesis/master-thesis-repowering/data/MaStR")
#import data
MaStR <- read.csv("WTs_RLP.csv", sep = ";")
#choose variables
MaStR <- MaStR[,c(1, 5, 7, 16, 17, 18, 21, 22, 23, 24, 43)]
MaStR <- MaStR[,c(2:6,8,9,11)]
View(MaStR)
View(MaStR)
#change collum names
names(MaStR)[1] <- "leistung"
names(MaStR)[2] <- "inbetrieb"
names(MaStR)[3] <- "gem"
names(MaStR)[4] <- "b_wgs84"
names(MaStR)[5] <- "l_wgs84"
names(MaStR)[6] <- "nabe"
names(MaStR)[7] <- "rotor"
names(MaStR)[8] <- "eeg_nr"
#check for Na's in coordinates
sum(is.na(MaStR$b_wgs84))
sum(is.na(MaStR$l_wgs84))
#import data
MaStR <- read.csv("WTs_RLP.csv", sep = ";", na.strings=c("","NA"))
#choose variables
MaStR <- MaStR[,c(1, 5, 7, 16, 17, 18, 21, 22, 23, 24, 43)]
MaStR <- MaStR[,c(2:6,8,9,11)]
#change collum names
names(MaStR)[1] <- "leistung"
names(MaStR)[2] <- "inbetrieb"
names(MaStR)[3] <- "gem"
names(MaStR)[4] <- "b_wgs84"
names(MaStR)[5] <- "l_wgs84"
names(MaStR)[6] <- "nabe"
names(MaStR)[7] <- "rotor"
names(MaStR)[8] <- "eeg_nr"
#check for Na's in coordinates
sum(is.na(MaStR$b_wgs84))
sum(is.na(MaStR$eeg_nr))
na.omit(MaStR)
MaStR_without_na <- na.omit(MaStR)
View(MaStR_without_na)
#check for Na's in coordinates
sum(is.na(MaStR$b_wgs84))
sum(is.na(MaStR$l_wgs84))
sum(is.na(MaStR$eeg_nr))
View(MaStR)
MaStR_without_na <- na.omit(MaStR$b_wgs84)
data_subset <- MaStR[ , c("l_wgs84", "egg_nr")]
data_subset <- MaStR[ , c(4,8)]
View(data_subset)
MaStR_without_na <- filter(MaStR, is.na(MaStR$b_wgs84) | is.na(MaStR$eeg_nr))
View(MaStR_without_na)
MaStR_without_na <- filter(MaStR, !is.na(MaStR$b_wgs84) | !is.na(MaStR$eeg_nr))
View(MaStR_without_na)
MaStR_without_na <- filter(MaStR, ! is.na(MaStR$b_wgs84) | ! is.na(MaStR$eeg_nr))
MaStR_without_na <- filter(MaStR, ! is.na(MaStR$eeg_nr))
sum(is.na(MaStR_without_na$b_wgs84))
MaStR_without_na <- filter(MaStR, ! is.na(MaStR$eeg_nr) & ! is.na(MaStR$b_wgs84))
sum(is.na(MaStR_without_na$b_wgs84))
rm(data_subset)
amprion2019 <- read.csv("Amprion/amprion_2019_processed.csv", na.strings=c("","NA"))
setwd("C:/Users/Dell/Desktop/MasterThesis/thesis_elias_cuadra_219202265/data/MaStR_amprion")
amprion2019 <- read.csv("../amprion/amprion_2019_processed.csv", na.strings=c("","NA"))
amprion2019 <- read.csv("../amprion/results_of_preparation/amprion_2019_processed_and_without_outliers.csv", na.strings=c("","NA"))
amprion2019 <- read.csv("amprion/results_of_preparation/amprion_2019_processed_and_without_outliers.csv", na.strings=c("","NA"))
amprion2019 <- read.csv("amprion_2019_processed_and_without_outliers.csv", na.strings=c("","NA"))
amprion2019 <- read.csv("amprion_2019_processed_and_without_outliers.csv", na.strings=c("","NA"))
View(amprion2019)
View(amprion2019)
View(MaStR_without_na)
View(amprion2019)
#import data
MaStR <- read.csv("WTs_RLP.csv", sep = ";", na.strings=c("","NA"))
#choose variables
MaStR <- MaStR[,c(1, 5, 7, 16, 17, 18, 21, 22, 23, 24, 43)]
MaStR <- MaStR[,c(2:6,8,9,11)]
#change collum names
names(MaStR)[1] <- "leistung_m"
names(MaStR)[2] <- "inbetrieb_m"
names(MaStR)[3] <- "gem_m"
names(MaStR)[4] <- "b_wgs84"
names(MaStR)[5] <- "l_wgs84"
names(MaStR)[6] <- "nabe_m"
names(MaStR)[7] <- "rotor_m"
names(MaStR)[8] <- "eeg_nr"
#check for Na's in coordinates
sum(is.na(MaStR$b_wgs84))
sum(is.na(MaStR$l_wgs84))
sum(is.na(MaStR$eeg_nr))
MaStR_without_na <- filter(MaStR, ! is.na(MaStR$eeg_nr) & ! is.na(MaStR$b_wgs84))
MaStR_without_na <- filter(MaStR, ! is.na(MaStR$eeg_nr) & ! is.na(MaStR$b_wgs84))
#import data
MaStR <- read.csv("WTs_RLP.csv", sep = ";", na.strings=c("","NA"))
#choose variables
MaStR <- MaStR[,c(1, 5, 7, 16, 17, 18, 21, 22, 23, 24, 43)]
MaStR <- MaStR[,c(2:6,8,9,11)]
#change column names
names(MaStR)[1] <- "leistung_m"
names(MaStR)[2] <- "inbetrieb_m"
names(MaStR)[3] <- "gem_m"
names(MaStR)[4] <- "b_wgs84"
names(MaStR)[5] <- "l_wgs84"
names(MaStR)[6] <- "nabe_m"
names(MaStR)[7] <- "rotor_m"
names(MaStR)[8] <- "eeg_nr"
MaStR_without_na <- filter(MaStR, ! is.na(MaStR$eeg_nr) & ! is.na(MaStR$b_wgs84))
pacman::p_load(rio, data.table, tidyverse, tidyr, purrr, magrittr, compare,
rgdal, raster, rgeos
)
MaStR_without_na <- filter(MaStR, ! is.na(MaStR$eeg_nr) & ! is.na(MaStR$b_wgs84))
View(MaStR_without_na)
#merge data sets
MaStR_amprion2019 <- merge(data.frame(MaStR_without_na), data.frame(amprion2019), by = "eeg_nr", all = TRUE)
#rename system key column
names(amprion2019)[7] <- "eeg_nr"
#merge data sets
MaStR_amprion2019 <- merge(data.frame(MaStR_without_na), data.frame(amprion2019), by = "eeg_nr", all = TRUE)
View(MaStR_amprion2019)
View(amprion2019)
amprion2019 <- amprion2019[,c(2:8)]
View(amprion2019)
#merge data sets
MaStR_amprion2019 <- merge(data.frame(MaStR_without_na), data.frame(amprion2019), by = "eeg_nr", all = TRUE)
#filter out NAs for EEG Nr. and remove duplicates
sum(is.na(MSB19_rename$eeg_nr))
#filter out NAs for EEG Nr. and remove duplicates
sum(is.na(MaStR_amprion2019$eeg_nr))
sum(dublicated(MaStR_amprion2019$eeg_nr))
sum(duplicated(MaStR_amprion2019$eeg_nr))
sum(is.na(MaStR_amprion2019$b_wgs84))
MaStR_amprion2019_without_na <- filter(MaStR_amprion2019, ! is.na(MaStR_amprion2019$b_wgs84))
sum(duplicated(MaStR_amprion2019_without_na$eeg_nr))
MaStR_amprion2019_without_dup <- distinct(MaStR_amprion2019_without_na)
MaStR_amprion2019_without_dup <- distinct(MaStR_amprion2019_without_na$eeg_nr)
MaStR_amprion2019_without_dup <- distinct(MaStR_amprion2019_without_na$eeg_nr, keep_all = TRUE)
sum(is.na(MaStR_amprion2019$b_wgs84))
#write csv
write.csv(MaStR_amprion2019_without_dup,"MaStR_amprion2019.csv")
