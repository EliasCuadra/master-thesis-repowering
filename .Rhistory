geom_point(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=menge_mwh), size = 0.4, colour = "lightblue") +
geom_point(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=menge_mwh), size = 0.4, colour = "lightred") +
geom_point(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=menge_mwh), size = 0.4, colour = "lightgreen") +
geom_smooth(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2017"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2018"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2019"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2017"), method= "lm", formula = y ~ poly(x, 3), fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2018"), method= "lm", formula = y ~ poly(x, 3), fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2019"), method= "lm", formula = y ~ poly(x, 3), fullrange = TRUE, size = 0.5)  +
theme_light() +
scale_x_date(limits = as.Date(c("1990-01-01","2030-12-31"))) +
ylim(-1000, 20000) +
xlab("Comissioning Date") +
ylab("Electricity yield per WT and year [MWh]") +
ggtitle("Development and prediction of electricity yield of WT's in \nRhineland-Palatinate from 2017 to 2019 over the comissioning date") +
theme( axis.text=element_text(size=12),
axis.title=element_text(size=13),
plot.title = element_text(size=14),
legend.position = c(0.85, 0.9),
legend.direction = "horizontal") +
geom_hline(yintercept = 7400, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("1997-01-01"),
y=6500,label="mean of ~ 7,400 MWh/a in 2021 with linear trends", size = 2.5) +
geom_hline(yintercept = 15000, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("2000-01-01"),
y=14200, label="> 15,000 MWh/a in 2030 with polynomial models", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=2000,label= "All adj. R² (3rd poly) ~ 72 %", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=3500,label= "All R² (linear) ~ 68 - 70 %", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=400,label="p-values all << 0.001", size = 2.5) +
scale_colour_manual(name = "Year", values=c("blue", "red", "green"))
############
#print plot#
############
pelectricity_yield_2019_poly +  theme(legend.position = c(0.25,0.9))
########################
#use a polynomial model#
########################
############################################
#Plot the values with linear trend for 2019#
############################################
pelectricity_yield_2019_poly <- ggplot() +
geom_point(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=menge_mwh), size = 0.4, colour = "lightblue") +
geom_point(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=menge_mwh), size = 0.4, colour = "#fc5a03") +
geom_point(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=menge_mwh), size = 0.4, colour = "lightgreen") +
geom_smooth(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2017"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2018"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2019"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2017"), method= "lm", formula = y ~ poly(x, 3), fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2018"), method= "lm", formula = y ~ poly(x, 3), fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2019"), method= "lm", formula = y ~ poly(x, 3), fullrange = TRUE, size = 0.5)  +
theme_light() +
scale_x_date(limits = as.Date(c("1990-01-01","2030-12-31"))) +
ylim(-1000, 20000) +
xlab("Comissioning Date") +
ylab("Electricity yield per WT and year [MWh]") +
ggtitle("Development and prediction of electricity yield of WT's in \nRhineland-Palatinate from 2017 to 2019 over the comissioning date") +
theme( axis.text=element_text(size=12),
axis.title=element_text(size=13),
plot.title = element_text(size=14),
legend.position = c(0.85, 0.9),
legend.direction = "horizontal") +
geom_hline(yintercept = 7400, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("1997-01-01"),
y=6500,label="mean of ~ 7,400 MWh/a in 2021 with linear trends", size = 2.5) +
geom_hline(yintercept = 15000, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("2000-01-01"),
y=14200, label="> 15,000 MWh/a in 2030 with polynomial models", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=2000,label= "All adj. R² (3rd poly) ~ 72 %", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=3500,label= "All R² (linear) ~ 68 - 70 %", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=400,label="p-values all << 0.001", size = 2.5) +
scale_colour_manual(name = "Year", values=c("blue", "red", "green"))
############
#print plot#
############
pelectricity_yield_2019_poly +  theme(legend.position = c(0.25,0.9))
########################
#use a polynomial model#
########################
############################################
#Plot the values with linear trend for 2019#
############################################
pelectricity_yield_2019_poly <- ggplot() +
geom_point(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=menge_mwh), size = 0.4, colour = "#03a1fc") +
geom_point(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=menge_mwh), size = 0.4, colour = "#fc5a03") +
geom_point(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=menge_mwh), size = 0.4, colour = "#94fc03") +
geom_smooth(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2017"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2018"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2019"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2017"), method= "lm", formula = y ~ poly(x, 3), fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2018"), method= "lm", formula = y ~ poly(x, 3), fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2019"), method= "lm", formula = y ~ poly(x, 3), fullrange = TRUE, size = 0.5)  +
theme_light() +
scale_x_date(limits = as.Date(c("1990-01-01","2030-12-31"))) +
ylim(-1000, 20000) +
xlab("Comissioning Date") +
ylab("Electricity yield per WT and year [MWh]") +
ggtitle("Development and prediction of electricity yield of WT's in \nRhineland-Palatinate from 2017 to 2019 over the comissioning date") +
theme( axis.text=element_text(size=12),
axis.title=element_text(size=13),
plot.title = element_text(size=14),
legend.position = c(0.85, 0.9),
legend.direction = "horizontal") +
geom_hline(yintercept = 7400, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("1997-01-01"),
y=6500,label="mean of ~ 7,400 MWh/a in 2021 with linear trends", size = 2.5) +
geom_hline(yintercept = 15000, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("2000-01-01"),
y=14200, label="> 15,000 MWh/a in 2030 with polynomial models", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=2000,label= "All adj. R² (3rd poly) ~ 72 %", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=3500,label= "All R² (linear) ~ 68 - 70 %", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=400,label="p-values all << 0.001", size = 2.5) +
scale_colour_manual(name = "Year", values=c("blue", "red", "green"))
############
#print plot#
############
pelectricity_yield_2019_poly +  theme(legend.position = c(0.25,0.9))
####################
#save plot as image#
####################
ggsave("results_of_analysis/electricity_yield_2017-2019_rlp_over_comissioning_date_poly.png",
plot = last_plot(),
dpi = 900,
width = 7,
height = 4)
########################
#use a polynomial model#
########################
############################################
#Plot the values with linear trend for 2019#
############################################
pelectricity_yield_2019_poly <- ggplot() +
geom_point(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=menge_mwh), size = 0.4, colour = "#03a1fc") +
geom_point(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=menge_mwh), size = 0.4, colour = "#fc5a03") +
geom_point(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=menge_mwh), size = 0.4, colour = "#94fc03") +
geom_smooth(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2017"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2018"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2019"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2017"), method= "lm", formula = y ~ poly(x, 3), fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2018"), method= "lm", formula = y ~ poly(x, 3), fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2019"), method= "lm", formula = y ~ poly(x, 3), fullrange = TRUE, size = 0.5)  +
theme_light() +
scale_x_date(limits = as.Date(c("1990-01-01","2030-12-31"))) +
ylim(-1000, 20000) +
xlab("Comissioning Date") +
ylab("Electricity yield per WT and year [MWh]") +
ggtitle("Development and prediction of electricity yield of WT's in \nRhineland-Palatinate from 2017 to 2019 over the comissioning date") +
theme( axis.text=element_text(size=12),
axis.title=element_text(size=13),
plot.title = element_text(size=14),
legend.position = c(0.85, 0.9),
legend.direction = "horizontal") +
geom_hline(yintercept = 7400, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("1997-01-01"),
y=6500,label="mean of ~ 7,400 MWh/a in 2021 with linear trends", size = 2.5) +
geom_hline(yintercept = 15000, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("2000-01-01"),
y=14200, label="> 15,000 MWh/a in 2030 with polynomial models", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=2000,label= "All adj. R² (3rd poly) ~ 72 %", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=3500,label= "All R² (linear) ~ 68 - 70 %", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=400,label="p-values all << 0.001", size = 2.5) +
scale_colour_manual(name = "Year", values=c("#03a1fc", "#fc5a03", "#94fc03"))
############
#print plot#
############
pelectricity_yield_2019_poly +  theme(legend.position = c(0.25,0.9))
####################
#save plot as image#
####################
ggsave("results_of_analysis/electricity_yield_2017-2019_rlp_over_comissioning_date_poly.png",
plot = last_plot(),
dpi = 900,
width = 7,
height = 4)
########################
#use a polynomial model#
########################
############################################
#Plot the values with linear trend for 2019#
############################################
pelectricity_yield_2019_poly <- ggplot() +
geom_point(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=menge_mwh), size = 0.4, colour = "#03a1fc") +
geom_point(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=menge_mwh), size = 0.4, colour = "#fc5a03") +
geom_point(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=menge_mwh), size = 0.4, colour = "#94fc03") +
geom_smooth(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2017"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2018"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2019"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2017"), method= "lm", formula = y ~ poly(x, 3), fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2018"), method= "lm", formula = y ~ poly(x, 3), fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2019"), method= "lm", formula = y ~ poly(x, 3), fullrange = TRUE, size = 0.5)  +
theme_light() +
scale_x_date(limits = as.Date(c("1990-01-01","2030-12-31"))) +
ylim(-1000, 20000) +
xlab("Comissioning Date") +
ylab("Electricity yield per WT and year [MWh]") +
ggtitle("Development and prediction of electricity yield of WT's in \nRhineland-Palatinate from 2017 to 2019 over the comissioning date") +
theme( axis.text=element_text(size=11),
axis.title=element_text(size=12),
plot.title = element_text(size=14),
legend.position = c(0.85, 0.9),
legend.direction = "horizontal") +
geom_hline(yintercept = 7400, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("1997-01-01"),
y=6500,label="mean of ~ 7,400 MWh/a in 2021 with linear trends", size = 2.5) +
geom_hline(yintercept = 15000, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("2000-01-01"),
y=14200, label="> 15,000 MWh/a in 2030 with polynomial models", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=2000,label= "All adj. R² (3rd poly) ~ 72 %", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=3500,label= "All R² (linear) ~ 68 - 70 %", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=400,label="p-values all << 0.001", size = 2.5) +
scale_colour_manual(name = "Year", values=c("#03a1fc", "#fc5a03", "#94fc03"))
############
#print plot#
############
pelectricity_yield_2019_poly +  theme(legend.position = c(0.25,0.9))
####################
#save plot as image#
####################
ggsave("results_of_analysis/electricity_yield_2017-2019_rlp_over_comissioning_date_poly.png",
plot = last_plot(),
dpi = 900,
width = 7,
height = 4)
########################
#use a polynomial model#
########################
############################################
#Plot the values with linear trend for 2019#
############################################
pelectricity_yield_2019_poly <- ggplot() +
geom_point(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=menge_mwh), size = 0.4, colour = "#03a1fc") +
geom_point(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=menge_mwh), size = 0.4, colour = "#fc5a03") +
geom_point(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=menge_mwh), size = 0.4, colour = "#94fc03") +
geom_smooth(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2017"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2018"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2019"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2017"), method= "lm", formula = y ~ poly(x, 3), fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2018"), method= "lm", formula = y ~ poly(x, 3), fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2019"), method= "lm", formula = y ~ poly(x, 3), fullrange = TRUE, size = 0.5)  +
theme_light() +
scale_x_date(limits = as.Date(c("1990-01-01","2030-12-31"))) +
ylim(-1000, 20000) +
xlab("Comissioning Date") +
ylab("Electricity yield per WT and year [MWh]") +
ggtitle("Development and prediction of electricity yield of WT's in \nRhineland-Palatinate from 2017 to 2019 over the comissioning date") +
theme( axis.text=element_text(size=11),
axis.title=element_text(size=12),
plot.title = element_text(size=14),
legend.position = c(0.85, 0.9),
legend.direction = "horizontal") +
geom_hline(yintercept = 7400, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("1997-01-01"),
y=6500,label="mean of ~ 7,400 MWh/a in 2021 with linear trends", size = 2.5) +
geom_hline(yintercept = 10000, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("1997-01-01"),
y=10500,label="mean of ~ 10,000 MWh/a in 2030 with linear trends", size = 2.5) +
geom_hline(yintercept = 15000, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("2000-01-01"),
y=14200, label="> 15,000 MWh/a in 2030 with polynomial models", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=2000,label= "All adj. R² (3rd poly) ~ 72 %", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=3500,label= "All R² (linear) ~ 68 - 70 %", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=400,label="p-values all << 0.001", size = 2.5) +
scale_colour_manual(name = "Year", values=c("#03a1fc", "#fc5a03", "#94fc03"))
############
#print plot#
############
pelectricity_yield_2019_poly +  theme(legend.position = c(0.25,0.9))
####################
#save plot as image#
####################
ggsave("results_of_analysis/electricity_yield_2017-2019_rlp_over_comissioning_date_poly.png",
plot = last_plot(),
dpi = 900,
width = 7,
height = 4)
########################
#use a polynomial model#
########################
############################################
#Plot the values with linear trend for 2019#
############################################
pelectricity_yield_2019_poly <- ggplot() +
geom_point(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=menge_mwh), size = 0.4, colour = "#03a1fc") +
geom_point(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=menge_mwh), size = 0.4, colour = "#fc5a03") +
geom_point(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=menge_mwh), size = 0.4, colour = "#94fc03") +
geom_smooth(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2017"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2018"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2019"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2017"), method= "lm", formula = y ~ poly(x, 3), fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2018"), method= "lm", formula = y ~ poly(x, 3), fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2019"), method= "lm", formula = y ~ poly(x, 3), fullrange = TRUE, size = 0.5)  +
theme_light() +
scale_x_date(limits = as.Date(c("1990-01-01","2030-12-31"))) +
ylim(-1000, 20000) +
xlab("Comissioning Date") +
ylab("Electricity yield per WT and year [MWh]") +
ggtitle("Development and prediction of electricity yield of WT's in \nRhineland-Palatinate from 2017 to 2019 over the comissioning date") +
theme( axis.text=element_text(size=11),
axis.title=element_text(size=12),
plot.title = element_text(size=14),
legend.position = c(0.85, 0.9),
legend.direction = "horizontal") +
geom_hline(yintercept = 7400, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("1997-01-01"),
y=6500,label="mean of ~ 7,400 MWh/a in 2021 with linear trends", size = 2.5) +
geom_hline(yintercept = 10000, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("2000-01-01"),
y=10500,label="mean of ~ 10,000 MWh/a in 2030 with linear trends", size = 2.5) +
geom_hline(yintercept = 15000, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("2005-01-01"),
y=14200, label="> 15,000 MWh/a in 2030 with polynomial models", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=2000,label= "All adj. R² (3rd poly) ~ 72 %", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=3500,label= "All R² (linear) ~ 68 - 70 %", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=400,label="p-values all << 0.001", size = 2.5) +
scale_colour_manual(name = "Year", values=c("#03a1fc", "#fc5a03", "#94fc03"))
############
#print plot#
############
pelectricity_yield_2019_poly +  theme(legend.position = c(0.25,0.9))
####################
#save plot as image#
####################
ggsave("results_of_analysis/electricity_yield_2017-2019_rlp_over_comissioning_date_poly.png",
plot = last_plot(),
dpi = 900,
width = 7,
height = 4)
########################
#use a polynomial model#
########################
############################################
#Plot the values with linear trend for 2019#
############################################
pelectricity_yield_2019_poly <- ggplot() +
geom_point(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=menge_mwh), size = 0.4, colour = "#03a1fc") +
geom_point(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=menge_mwh), size = 0.4, colour = "#fc5a03") +
geom_point(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=menge_mwh), size = 0.4, colour = "#94fc03") +
geom_smooth(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2017"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2018"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2019"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2017"), method= "lm", formula = y ~ poly(x, 3), fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2018"), method= "lm", formula = y ~ poly(x, 3), fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2019"), method= "lm", formula = y ~ poly(x, 3), fullrange = TRUE, size = 0.5)  +
theme_light() +
scale_x_date(limits = as.Date(c("1990-01-01","2030-12-31"))) +
ylim(-1000, 20000) +
xlab("Comissioning Date") +
ylab("Electricity yield per WT and year [MWh]") +
ggtitle("Development and prediction of electricity yield of WT's in \nRhineland-Palatinate from 2017 to 2019 over the comissioning date") +
theme( axis.text=element_text(size=11),
axis.title=element_text(size=12),
plot.title = element_text(size=14),
legend.position = c(0.85, 0.9),
legend.direction = "horizontal") +
geom_hline(yintercept = 7400, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("1997-01-01"),
y=6500,label="mean of ~ 7,400 MWh/a in 2021 with linear trends", size = 2.5) +
geom_hline(yintercept = 10000, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("2000-01-01"),
y=10500,label="mean of ~ 10,000 MWh/a in 2030 with linear trends", size = 2.5) +
geom_hline(yintercept = 15000, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("2004-01-01"),
y=14200, label="> 15,000 MWh/a in 2030 with polynomial models", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=2000,label= "All adj. R² (3rd poly) ~ 72 %", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=3500,label= "All R² (linear) ~ 68 - 70 %", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=400,label="p-values all << 0.001", size = 2.5) +
scale_colour_manual(name = "Year", values=c("#03a1fc", "#fc5a03", "#94fc03"))
############
#print plot#
############
pelectricity_yield_2019_poly +  theme(legend.position = c(0.25,0.9))
####################
#save plot as image#
####################
ggsave("results_of_analysis/electricity_yield_2017-2019_rlp_over_comissioning_date_poly.png",
plot = last_plot(),
dpi = 900,
width = 7,
height = 4)
########################
#use a polynomial model#
########################
############################################
#Plot the values with linear trend for 2019#
############################################
pelectricity_yield_2019_poly <- ggplot() +
geom_point(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=menge_mwh), size = 0.4, colour = "#03a1fc") +
geom_point(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=menge_mwh), size = 0.4, colour = "#fc5a03") +
geom_point(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=menge_mwh), size = 0.4, colour = "#94fc03") +
geom_smooth(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2017"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2018"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2019"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2017"), method= "lm", formula = y ~ poly(x, 3), fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2018"), method= "lm", formula = y ~ poly(x, 3), fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2019"), method= "lm", formula = y ~ poly(x, 3), fullrange = TRUE, size = 0.5)  +
theme_light() +
scale_x_date(limits = as.Date(c("1990-01-01","2030-12-31"))) +
ylim(-1000, 20000) +
xlab("Comissioning Date") +
ylab("Electricity yield per WT and year [MWh]") +
ggtitle("Development and prediction of electricity yield of WT's in \nRhineland-Palatinate from 2017 to 2019 over the comissioning date") +
theme( axis.text=element_text(size=11),
axis.title=element_text(size=12),
plot.title = element_text(size=14),
legend.position = c(0.85, 0.9),
legend.direction = "horizontal") +
geom_hline(yintercept = 7400, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("1997-01-01"),
y=6500,label="mean of ~ 7,400 MWh/a in 2021 with linear trends", size = 2.5) +
geom_hline(yintercept = 10000, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("2000-01-01"),
y=10500,label="mean of ~ 10,000 MWh/a in 2030 with linear trends", size = 2.5) +
geom_hline(yintercept = 15000, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("2003-01-01"),
y=14200, label="> 15,000 MWh/a in 2030 with polynomial models", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=2000,label= "All adj. R² (3rd poly) ~ 72 %", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=3500,label= "All R² (linear) ~ 68 - 70 %", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=400,label="p-values all << 0.001", size = 2.5) +
scale_colour_manual(name = "Year", values=c("#03a1fc", "#fc5a03", "#94fc03"))
############
#print plot#
############
pelectricity_yield_2019_poly +  theme(legend.position = c(0.25,0.9))
####################
#save plot as image#
####################
ggsave("results_of_analysis/electricity_yield_2017-2019_rlp_over_comissioning_date_poly.png",
plot = last_plot(),
dpi = 900,
width = 7,
height = 4)
########################
#use a polynomial model#
########################
############################################
#Plot the values with linear trend for 2019#
############################################
pelectricity_yield_2019_poly <- ggplot() +
geom_point(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=menge_mwh), size = 0.4, colour = "#03a1fc") +
geom_point(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=menge_mwh), size = 0.4, colour = "#fc5a03") +
geom_point(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=menge_mwh), size = 0.4, colour = "#94fc03") +
geom_smooth(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2017"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2018"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2019"), method=lm, se=TRUE, fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2017_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2017"), method= "lm", formula = y ~ poly(x, 3), fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2018_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2018"), method= "lm", formula = y ~ poly(x, 3), fullrange = TRUE, size = 0.5)  +
geom_smooth(data = selection_2019_without_outliers, aes(x=inbetriebnahme, y=menge_mwh, colour = "2019"), method= "lm", formula = y ~ poly(x, 3), fullrange = TRUE, size = 0.5)  +
theme_light() +
scale_x_date(limits = as.Date(c("1990-01-01","2030-12-31"))) +
ylim(-1000, 20000) +
xlab("Comissioning Date") +
ylab("Electricity yield per WT and year [MWh]") +
ggtitle("Development and prediction of electricity yield of WT's in \nRhineland-Palatinate from 2017 to 2019 over the comissioning date") +
theme( axis.text=element_text(size=11),
axis.title=element_text(size=12),
plot.title = element_text(size=14),
legend.position = c(0.85, 0.9),
legend.direction = "horizontal") +
geom_hline(yintercept = 7400, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("1997-01-01"),
y=6500,label="mean of ~ 7,400 MWh/a in 2021 with linear trends", size = 2.5) +
geom_hline(yintercept = 10000, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("2000-01-01"),
y=11000,label="mean of ~ 10,000 MWh/a in 2030 with linear trends", size = 2.5) +
geom_hline(yintercept = 15000, linetype = 'dashed', size = 0.25) +
annotate(geom="text",x=as.Date("2003-01-01"),
y=14200, label="> 15,000 MWh/a in 2030 with polynomial models", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=2000,label= "All adj. R² (3rd poly) ~ 72 %", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=3500,label= "All R² (linear) ~ 68 - 70 %", size = 2.5) +
annotate(geom="text",x=as.Date("2026-01-01"),
y=400,label="p-values all << 0.001", size = 2.5) +
scale_colour_manual(name = "Year", values=c("#03a1fc", "#fc5a03", "#94fc03"))
############
#print plot#
############
pelectricity_yield_2019_poly +  theme(legend.position = c(0.25,0.9))
####################
#save plot as image#
####################
ggsave("results_of_analysis/electricity_yield_2017-2019_rlp_over_comissioning_date_poly.png",
plot = last_plot(),
dpi = 900,
width = 7,
height = 4)
